Grammar:

Rule 0     S' -> nena
Rule 1     nena -> attributes NEWLINES text_block
Rule 2     attributes -> ATTRIBUTE
Rule 3     attributes -> NEWLINE ATTRIBUTE
Rule 4     attributes -> attributes NEWLINE ATTRIBUTE
Rule 5     text_block -> paragraph
Rule 6     text_block -> text_block NEWLINES paragraph
Rule 7     paragraph -> line
Rule 8     paragraph -> paragraph line
Rule 9     line -> LINESTAMP words
Rule 10    words -> word word
Rule 11    words -> words word
Rule 12    words -> words span
Rule 13    span -> SPAN_START word SPAN_END NEWLINE
Rule 14    span -> SPAN_START word SPAN_END endings
Rule 15    span -> SPAN_START word SPAN_END
Rule 16    span -> SPAN_START words SPAN_END NEWLINE
Rule 17    span -> SPAN_START words SPAN_END endings
Rule 18    span -> SPAN_START words SPAN_END
Rule 19    span -> SPAN_START word letters SPAN_END NEWLINE
Rule 20    span -> SPAN_START word letters SPAN_END endings
Rule 21    span -> SPAN_START word letters SPAN_END
Rule 22    span -> SPAN_START letters SPAN_END NEWLINE
Rule 23    span -> SPAN_START letters SPAN_END endings
Rule 24    span -> SPAN_START letters SPAN_END
Rule 25    word -> letters NEWLINE
Rule 26    word -> letters endings
Rule 27    word -> beginnings letters endings
Rule 28    beginnings -> PUNCT_BEGIN
Rule 29    beginnings -> PUNCT_BEGIN beginnings
Rule 30    endings -> PUNCT_END
Rule 31    endings -> endings PUNCT_END
Rule 32    endings -> endings NEWLINE
Rule 33    letters -> FOREIGN_LETTER
Rule 34    letters -> LETTER
Rule 35    letters -> FOREIGN_LETTER letters
Rule 36    letters -> LETTER letters

Terminals, with rules where they appear:

ATTRIBUTE            : 2 3 4
FOREIGN_LETTER       : 33 35
LETTER               : 34 36
LINESTAMP            : 9
NEWLINE              : 3 4 13 16 19 22 25 32
NEWLINES             : 1 6
PUNCT_BEGIN          : 28 29
PUNCT_END            : 30 31
SPAN_END             : 13 14 15 16 17 18 19 20 21 22 23 24
SPAN_START           : 13 14 15 16 17 18 19 20 21 22 23 24
error                : 

Nonterminals, with rules where they appear:

attributes           : 1 4
beginnings           : 27 29
endings              : 14 17 20 23 26 27 31 32
letters              : 19 20 21 22 23 24 25 26 27 35 36
line                 : 7 8
nena                 : 0
paragraph            : 5 6 8
span                 : 12
text_block           : 1 6
word                 : 10 10 11 13 14 15 19 20 21
words                : 9 11 12 16 17 18


state 0

    (0) S' -> . nena
    (1) nena -> . attributes NEWLINES text_block
    (2) attributes -> . ATTRIBUTE
    (3) attributes -> . NEWLINE ATTRIBUTE
    (4) attributes -> . attributes NEWLINE ATTRIBUTE
    ATTRIBUTE       shift and go to state 3
    NEWLINE         shift and go to state 4

    nena                           shift and go to state 1
    attributes                     shift and go to state 2

state 1

    (0) S' -> nena .


state 2

    (1) nena -> attributes . NEWLINES text_block
    (4) attributes -> attributes . NEWLINE ATTRIBUTE
    NEWLINES        shift and go to state 5
    NEWLINE         shift and go to state 6


state 3

    (2) attributes -> ATTRIBUTE .
    NEWLINES        reduce using rule 2 (attributes -> ATTRIBUTE .)
    NEWLINE         reduce using rule 2 (attributes -> ATTRIBUTE .)


state 4

    (3) attributes -> NEWLINE . ATTRIBUTE
    ATTRIBUTE       shift and go to state 7


state 5

    (1) nena -> attributes NEWLINES . text_block
    (5) text_block -> . paragraph
    (6) text_block -> . text_block NEWLINES paragraph
    (7) paragraph -> . line
    (8) paragraph -> . paragraph line
    (9) line -> . LINESTAMP words
    LINESTAMP       shift and go to state 11

    text_block                     shift and go to state 8
    paragraph                      shift and go to state 9
    line                           shift and go to state 10

state 6

    (4) attributes -> attributes NEWLINE . ATTRIBUTE
    ATTRIBUTE       shift and go to state 12


state 7

    (3) attributes -> NEWLINE ATTRIBUTE .
    NEWLINES        reduce using rule 3 (attributes -> NEWLINE ATTRIBUTE .)
    NEWLINE         reduce using rule 3 (attributes -> NEWLINE ATTRIBUTE .)


state 8

    (1) nena -> attributes NEWLINES text_block .
    (6) text_block -> text_block . NEWLINES paragraph
    $end            reduce using rule 1 (nena -> attributes NEWLINES text_block .)
    NEWLINES        shift and go to state 13


state 9

    (5) text_block -> paragraph .
    (8) paragraph -> paragraph . line
    (9) line -> . LINESTAMP words
    NEWLINES        reduce using rule 5 (text_block -> paragraph .)
    $end            reduce using rule 5 (text_block -> paragraph .)
    LINESTAMP       shift and go to state 11

    line                           shift and go to state 14

state 10

    (7) paragraph -> line .
    LINESTAMP       reduce using rule 7 (paragraph -> line .)
    NEWLINES        reduce using rule 7 (paragraph -> line .)
    $end            reduce using rule 7 (paragraph -> line .)


state 11

    (9) line -> LINESTAMP . words
    (10) words -> . word word
    (11) words -> . words word
    (12) words -> . words span
    (25) word -> . letters NEWLINE
    (26) word -> . letters endings
    (27) word -> . beginnings letters endings
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    (28) beginnings -> . PUNCT_BEGIN
    (29) beginnings -> . PUNCT_BEGIN beginnings
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20
    PUNCT_BEGIN     shift and go to state 21

    words                          shift and go to state 15
    word                           shift and go to state 16
    letters                        shift and go to state 17
    beginnings                     shift and go to state 18

state 12

    (4) attributes -> attributes NEWLINE ATTRIBUTE .
    NEWLINES        reduce using rule 4 (attributes -> attributes NEWLINE ATTRIBUTE .)
    NEWLINE         reduce using rule 4 (attributes -> attributes NEWLINE ATTRIBUTE .)


state 13

    (6) text_block -> text_block NEWLINES . paragraph
    (7) paragraph -> . line
    (8) paragraph -> . paragraph line
    (9) line -> . LINESTAMP words
    LINESTAMP       shift and go to state 11

    paragraph                      shift and go to state 22
    line                           shift and go to state 10

state 14

    (8) paragraph -> paragraph line .
    LINESTAMP       reduce using rule 8 (paragraph -> paragraph line .)
    NEWLINES        reduce using rule 8 (paragraph -> paragraph line .)
    $end            reduce using rule 8 (paragraph -> paragraph line .)


state 15

    (9) line -> LINESTAMP words .
    (11) words -> words . word
    (12) words -> words . span
    (25) word -> . letters NEWLINE
    (26) word -> . letters endings
    (27) word -> . beginnings letters endings
    (13) span -> . SPAN_START word SPAN_END NEWLINE
    (14) span -> . SPAN_START word SPAN_END endings
    (15) span -> . SPAN_START word SPAN_END
    (16) span -> . SPAN_START words SPAN_END NEWLINE
    (17) span -> . SPAN_START words SPAN_END endings
    (18) span -> . SPAN_START words SPAN_END
    (19) span -> . SPAN_START word letters SPAN_END NEWLINE
    (20) span -> . SPAN_START word letters SPAN_END endings
    (21) span -> . SPAN_START word letters SPAN_END
    (22) span -> . SPAN_START letters SPAN_END NEWLINE
    (23) span -> . SPAN_START letters SPAN_END endings
    (24) span -> . SPAN_START letters SPAN_END
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    (28) beginnings -> . PUNCT_BEGIN
    (29) beginnings -> . PUNCT_BEGIN beginnings
    LINESTAMP       reduce using rule 9 (line -> LINESTAMP words .)
    NEWLINES        reduce using rule 9 (line -> LINESTAMP words .)
    $end            reduce using rule 9 (line -> LINESTAMP words .)
    SPAN_START      shift and go to state 25
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20
    PUNCT_BEGIN     shift and go to state 21

    word                           shift and go to state 23
    span                           shift and go to state 24
    letters                        shift and go to state 17
    beginnings                     shift and go to state 18

state 16

    (10) words -> word . word
    (25) word -> . letters NEWLINE
    (26) word -> . letters endings
    (27) word -> . beginnings letters endings
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    (28) beginnings -> . PUNCT_BEGIN
    (29) beginnings -> . PUNCT_BEGIN beginnings
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20
    PUNCT_BEGIN     shift and go to state 21

    word                           shift and go to state 26
    letters                        shift and go to state 17
    beginnings                     shift and go to state 18

state 17

    (25) word -> letters . NEWLINE
    (26) word -> letters . endings
    (30) endings -> . PUNCT_END
    (31) endings -> . endings PUNCT_END
    (32) endings -> . endings NEWLINE
    NEWLINE         shift and go to state 27
    PUNCT_END       shift and go to state 29

    endings                        shift and go to state 28

state 18

    (27) word -> beginnings . letters endings
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20

    letters                        shift and go to state 30

state 19

    (33) letters -> FOREIGN_LETTER .
    (35) letters -> FOREIGN_LETTER . letters
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    NEWLINE         reduce using rule 33 (letters -> FOREIGN_LETTER .)
    PUNCT_END       reduce using rule 33 (letters -> FOREIGN_LETTER .)
    SPAN_END        reduce using rule 33 (letters -> FOREIGN_LETTER .)
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20

    letters                        shift and go to state 31

state 20

    (34) letters -> LETTER .
    (36) letters -> LETTER . letters
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    NEWLINE         reduce using rule 34 (letters -> LETTER .)
    PUNCT_END       reduce using rule 34 (letters -> LETTER .)
    SPAN_END        reduce using rule 34 (letters -> LETTER .)
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20

    letters                        shift and go to state 32

state 21

    (28) beginnings -> PUNCT_BEGIN .
    (29) beginnings -> PUNCT_BEGIN . beginnings
    (28) beginnings -> . PUNCT_BEGIN
    (29) beginnings -> . PUNCT_BEGIN beginnings
    FOREIGN_LETTER  reduce using rule 28 (beginnings -> PUNCT_BEGIN .)
    LETTER          reduce using rule 28 (beginnings -> PUNCT_BEGIN .)
    PUNCT_BEGIN     shift and go to state 21

    beginnings                     shift and go to state 33

state 22

    (6) text_block -> text_block NEWLINES paragraph .
    (8) paragraph -> paragraph . line
    (9) line -> . LINESTAMP words
    NEWLINES        reduce using rule 6 (text_block -> text_block NEWLINES paragraph .)
    $end            reduce using rule 6 (text_block -> text_block NEWLINES paragraph .)
    LINESTAMP       shift and go to state 11

    line                           shift and go to state 14

state 23

    (11) words -> words word .
    SPAN_START      reduce using rule 11 (words -> words word .)
    FOREIGN_LETTER  reduce using rule 11 (words -> words word .)
    LETTER          reduce using rule 11 (words -> words word .)
    PUNCT_BEGIN     reduce using rule 11 (words -> words word .)
    LINESTAMP       reduce using rule 11 (words -> words word .)
    NEWLINES        reduce using rule 11 (words -> words word .)
    $end            reduce using rule 11 (words -> words word .)
    SPAN_END        reduce using rule 11 (words -> words word .)


state 24

    (12) words -> words span .
    SPAN_START      reduce using rule 12 (words -> words span .)
    FOREIGN_LETTER  reduce using rule 12 (words -> words span .)
    LETTER          reduce using rule 12 (words -> words span .)
    PUNCT_BEGIN     reduce using rule 12 (words -> words span .)
    LINESTAMP       reduce using rule 12 (words -> words span .)
    NEWLINES        reduce using rule 12 (words -> words span .)
    $end            reduce using rule 12 (words -> words span .)
    SPAN_END        reduce using rule 12 (words -> words span .)


state 25

    (13) span -> SPAN_START . word SPAN_END NEWLINE
    (14) span -> SPAN_START . word SPAN_END endings
    (15) span -> SPAN_START . word SPAN_END
    (16) span -> SPAN_START . words SPAN_END NEWLINE
    (17) span -> SPAN_START . words SPAN_END endings
    (18) span -> SPAN_START . words SPAN_END
    (19) span -> SPAN_START . word letters SPAN_END NEWLINE
    (20) span -> SPAN_START . word letters SPAN_END endings
    (21) span -> SPAN_START . word letters SPAN_END
    (22) span -> SPAN_START . letters SPAN_END NEWLINE
    (23) span -> SPAN_START . letters SPAN_END endings
    (24) span -> SPAN_START . letters SPAN_END
    (25) word -> . letters NEWLINE
    (26) word -> . letters endings
    (27) word -> . beginnings letters endings
    (10) words -> . word word
    (11) words -> . words word
    (12) words -> . words span
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    (28) beginnings -> . PUNCT_BEGIN
    (29) beginnings -> . PUNCT_BEGIN beginnings
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20
    PUNCT_BEGIN     shift and go to state 21

    word                           shift and go to state 34
    words                          shift and go to state 35
    letters                        shift and go to state 36
    beginnings                     shift and go to state 18

state 26

    (10) words -> word word .
    SPAN_START      reduce using rule 10 (words -> word word .)
    FOREIGN_LETTER  reduce using rule 10 (words -> word word .)
    LETTER          reduce using rule 10 (words -> word word .)
    PUNCT_BEGIN     reduce using rule 10 (words -> word word .)
    LINESTAMP       reduce using rule 10 (words -> word word .)
    NEWLINES        reduce using rule 10 (words -> word word .)
    $end            reduce using rule 10 (words -> word word .)
    SPAN_END        reduce using rule 10 (words -> word word .)


state 27

    (25) word -> letters NEWLINE .
    FOREIGN_LETTER  reduce using rule 25 (word -> letters NEWLINE .)
    LETTER          reduce using rule 25 (word -> letters NEWLINE .)
    PUNCT_BEGIN     reduce using rule 25 (word -> letters NEWLINE .)
    SPAN_START      reduce using rule 25 (word -> letters NEWLINE .)
    LINESTAMP       reduce using rule 25 (word -> letters NEWLINE .)
    NEWLINES        reduce using rule 25 (word -> letters NEWLINE .)
    $end            reduce using rule 25 (word -> letters NEWLINE .)
    SPAN_END        reduce using rule 25 (word -> letters NEWLINE .)


state 28

    (26) word -> letters endings .
    (31) endings -> endings . PUNCT_END
    (32) endings -> endings . NEWLINE
    FOREIGN_LETTER  reduce using rule 26 (word -> letters endings .)
    LETTER          reduce using rule 26 (word -> letters endings .)
    PUNCT_BEGIN     reduce using rule 26 (word -> letters endings .)
    SPAN_START      reduce using rule 26 (word -> letters endings .)
    LINESTAMP       reduce using rule 26 (word -> letters endings .)
    NEWLINES        reduce using rule 26 (word -> letters endings .)
    $end            reduce using rule 26 (word -> letters endings .)
    SPAN_END        reduce using rule 26 (word -> letters endings .)
    PUNCT_END       shift and go to state 37
    NEWLINE         shift and go to state 38


state 29

    (30) endings -> PUNCT_END .
    PUNCT_END       reduce using rule 30 (endings -> PUNCT_END .)
    NEWLINE         reduce using rule 30 (endings -> PUNCT_END .)
    FOREIGN_LETTER  reduce using rule 30 (endings -> PUNCT_END .)
    LETTER          reduce using rule 30 (endings -> PUNCT_END .)
    PUNCT_BEGIN     reduce using rule 30 (endings -> PUNCT_END .)
    SPAN_START      reduce using rule 30 (endings -> PUNCT_END .)
    LINESTAMP       reduce using rule 30 (endings -> PUNCT_END .)
    NEWLINES        reduce using rule 30 (endings -> PUNCT_END .)
    $end            reduce using rule 30 (endings -> PUNCT_END .)
    SPAN_END        reduce using rule 30 (endings -> PUNCT_END .)


state 30

    (27) word -> beginnings letters . endings
    (30) endings -> . PUNCT_END
    (31) endings -> . endings PUNCT_END
    (32) endings -> . endings NEWLINE
    PUNCT_END       shift and go to state 29

    endings                        shift and go to state 39

state 31

    (35) letters -> FOREIGN_LETTER letters .
    NEWLINE         reduce using rule 35 (letters -> FOREIGN_LETTER letters .)
    PUNCT_END       reduce using rule 35 (letters -> FOREIGN_LETTER letters .)
    SPAN_END        reduce using rule 35 (letters -> FOREIGN_LETTER letters .)


state 32

    (36) letters -> LETTER letters .
    NEWLINE         reduce using rule 36 (letters -> LETTER letters .)
    PUNCT_END       reduce using rule 36 (letters -> LETTER letters .)
    SPAN_END        reduce using rule 36 (letters -> LETTER letters .)


state 33

    (29) beginnings -> PUNCT_BEGIN beginnings .
    FOREIGN_LETTER  reduce using rule 29 (beginnings -> PUNCT_BEGIN beginnings .)
    LETTER          reduce using rule 29 (beginnings -> PUNCT_BEGIN beginnings .)


state 34

    (13) span -> SPAN_START word . SPAN_END NEWLINE
    (14) span -> SPAN_START word . SPAN_END endings
    (15) span -> SPAN_START word . SPAN_END
    (19) span -> SPAN_START word . letters SPAN_END NEWLINE
    (20) span -> SPAN_START word . letters SPAN_END endings
    (21) span -> SPAN_START word . letters SPAN_END
    (10) words -> word . word
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    (25) word -> . letters NEWLINE
    (26) word -> . letters endings
    (27) word -> . beginnings letters endings
    (28) beginnings -> . PUNCT_BEGIN
    (29) beginnings -> . PUNCT_BEGIN beginnings
    SPAN_END        shift and go to state 40
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20
    PUNCT_BEGIN     shift and go to state 21

    word                           shift and go to state 26
    letters                        shift and go to state 41
    beginnings                     shift and go to state 18

state 35

    (16) span -> SPAN_START words . SPAN_END NEWLINE
    (17) span -> SPAN_START words . SPAN_END endings
    (18) span -> SPAN_START words . SPAN_END
    (11) words -> words . word
    (12) words -> words . span
    (25) word -> . letters NEWLINE
    (26) word -> . letters endings
    (27) word -> . beginnings letters endings
    (13) span -> . SPAN_START word SPAN_END NEWLINE
    (14) span -> . SPAN_START word SPAN_END endings
    (15) span -> . SPAN_START word SPAN_END
    (16) span -> . SPAN_START words SPAN_END NEWLINE
    (17) span -> . SPAN_START words SPAN_END endings
    (18) span -> . SPAN_START words SPAN_END
    (19) span -> . SPAN_START word letters SPAN_END NEWLINE
    (20) span -> . SPAN_START word letters SPAN_END endings
    (21) span -> . SPAN_START word letters SPAN_END
    (22) span -> . SPAN_START letters SPAN_END NEWLINE
    (23) span -> . SPAN_START letters SPAN_END endings
    (24) span -> . SPAN_START letters SPAN_END
    (33) letters -> . FOREIGN_LETTER
    (34) letters -> . LETTER
    (35) letters -> . FOREIGN_LETTER letters
    (36) letters -> . LETTER letters
    (28) beginnings -> . PUNCT_BEGIN
    (29) beginnings -> . PUNCT_BEGIN beginnings
    SPAN_END        shift and go to state 42
    SPAN_START      shift and go to state 25
    FOREIGN_LETTER  shift and go to state 19
    LETTER          shift and go to state 20
    PUNCT_BEGIN     shift and go to state 21

    word                           shift and go to state 23
    span                           shift and go to state 24
    letters                        shift and go to state 17
    beginnings                     shift and go to state 18

state 36

    (22) span -> SPAN_START letters . SPAN_END NEWLINE
    (23) span -> SPAN_START letters . SPAN_END endings
    (24) span -> SPAN_START letters . SPAN_END
    (25) word -> letters . NEWLINE
    (26) word -> letters . endings
    (30) endings -> . PUNCT_END
    (31) endings -> . endings PUNCT_END
    (32) endings -> . endings NEWLINE
    SPAN_END        shift and go to state 43
    NEWLINE         shift and go to state 27
    PUNCT_END       shift and go to state 29

    endings                        shift and go to state 28

state 37

    (31) endings -> endings PUNCT_END .
    PUNCT_END       reduce using rule 31 (endings -> endings PUNCT_END .)
    NEWLINE         reduce using rule 31 (endings -> endings PUNCT_END .)
    FOREIGN_LETTER  reduce using rule 31 (endings -> endings PUNCT_END .)
    LETTER          reduce using rule 31 (endings -> endings PUNCT_END .)
    PUNCT_BEGIN     reduce using rule 31 (endings -> endings PUNCT_END .)
    SPAN_START      reduce using rule 31 (endings -> endings PUNCT_END .)
    LINESTAMP       reduce using rule 31 (endings -> endings PUNCT_END .)
    NEWLINES        reduce using rule 31 (endings -> endings PUNCT_END .)
    $end            reduce using rule 31 (endings -> endings PUNCT_END .)
    SPAN_END        reduce using rule 31 (endings -> endings PUNCT_END .)


state 38

    (32) endings -> endings NEWLINE .
    PUNCT_END       reduce using rule 32 (endings -> endings NEWLINE .)
    NEWLINE         reduce using rule 32 (endings -> endings NEWLINE .)
    FOREIGN_LETTER  reduce using rule 32 (endings -> endings NEWLINE .)
    LETTER          reduce using rule 32 (endings -> endings NEWLINE .)
    PUNCT_BEGIN     reduce using rule 32 (endings -> endings NEWLINE .)
    SPAN_START      reduce using rule 32 (endings -> endings NEWLINE .)
    LINESTAMP       reduce using rule 32 (endings -> endings NEWLINE .)
    NEWLINES        reduce using rule 32 (endings -> endings NEWLINE .)
    $end            reduce using rule 32 (endings -> endings NEWLINE .)
    SPAN_END        reduce using rule 32 (endings -> endings NEWLINE .)


state 39

    (27) word -> beginnings letters endings .
    (31) endings -> endings . PUNCT_END
    (32) endings -> endings . NEWLINE
    FOREIGN_LETTER  reduce using rule 27 (word -> beginnings letters endings .)
    LETTER          reduce using rule 27 (word -> beginnings letters endings .)
    PUNCT_BEGIN     reduce using rule 27 (word -> beginnings letters endings .)
    SPAN_START      reduce using rule 27 (word -> beginnings letters endings .)
    LINESTAMP       reduce using rule 27 (word -> beginnings letters endings .)
    NEWLINES        reduce using rule 27 (word -> beginnings letters endings .)
    $end            reduce using rule 27 (word -> beginnings letters endings .)
    SPAN_END        reduce using rule 27 (word -> beginnings letters endings .)
    PUNCT_END       shift and go to state 37
    NEWLINE         shift and go to state 38


state 40

    (13) span -> SPAN_START word SPAN_END . NEWLINE
    (14) span -> SPAN_START word SPAN_END . endings
    (15) span -> SPAN_START word SPAN_END .
    (30) endings -> . PUNCT_END
    (31) endings -> . endings PUNCT_END
    (32) endings -> . endings NEWLINE
    NEWLINE         shift and go to state 44
    SPAN_START      reduce using rule 15 (span -> SPAN_START word SPAN_END .)
    FOREIGN_LETTER  reduce using rule 15 (span -> SPAN_START word SPAN_END .)
    LETTER          reduce using rule 15 (span -> SPAN_START word SPAN_END .)
    PUNCT_BEGIN     reduce using rule 15 (span -> SPAN_START word SPAN_END .)
    LINESTAMP       reduce using rule 15 (span -> SPAN_START word SPAN_END .)
    NEWLINES        reduce using rule 15 (span -> SPAN_START word SPAN_END .)
    $end            reduce using rule 15 (span -> SPAN_START word SPAN_END .)
    SPAN_END        reduce using rule 15 (span -> SPAN_START word SPAN_END .)
    PUNCT_END       shift and go to state 29

    endings                        shift and go to state 45

state 41

    (19) span -> SPAN_START word letters . SPAN_END NEWLINE
    (20) span -> SPAN_START word letters . SPAN_END endings
    (21) span -> SPAN_START word letters . SPAN_END
    (25) word -> letters . NEWLINE
    (26) word -> letters . endings
    (30) endings -> . PUNCT_END
    (31) endings -> . endings PUNCT_END
    (32) endings -> . endings NEWLINE
    SPAN_END        shift and go to state 46
    NEWLINE         shift and go to state 27
    PUNCT_END       shift and go to state 29

    endings                        shift and go to state 28

state 42

    (16) span -> SPAN_START words SPAN_END . NEWLINE
    (17) span -> SPAN_START words SPAN_END . endings
    (18) span -> SPAN_START words SPAN_END .
    (30) endings -> . PUNCT_END
    (31) endings -> . endings PUNCT_END
    (32) endings -> . endings NEWLINE
    NEWLINE         shift and go to state 47
    SPAN_START      reduce using rule 18 (span -> SPAN_START words SPAN_END .)
    FOREIGN_LETTER  reduce using rule 18 (span -> SPAN_START words SPAN_END .)
    LETTER          reduce using rule 18 (span -> SPAN_START words SPAN_END .)
    PUNCT_BEGIN     reduce using rule 18 (span -> SPAN_START words SPAN_END .)
    LINESTAMP       reduce using rule 18 (span -> SPAN_START words SPAN_END .)
    NEWLINES        reduce using rule 18 (span -> SPAN_START words SPAN_END .)
    $end            reduce using rule 18 (span -> SPAN_START words SPAN_END .)
    SPAN_END        reduce using rule 18 (span -> SPAN_START words SPAN_END .)
    PUNCT_END       shift and go to state 29

    endings                        shift and go to state 48

state 43

    (22) span -> SPAN_START letters SPAN_END . NEWLINE
    (23) span -> SPAN_START letters SPAN_END . endings
    (24) span -> SPAN_START letters SPAN_END .
    (30) endings -> . PUNCT_END
    (31) endings -> . endings PUNCT_END
    (32) endings -> . endings NEWLINE
    NEWLINE         shift and go to state 49
    SPAN_START      reduce using rule 24 (span -> SPAN_START letters SPAN_END .)
    FOREIGN_LETTER  reduce using rule 24 (span -> SPAN_START letters SPAN_END .)
    LETTER          reduce using rule 24 (span -> SPAN_START letters SPAN_END .)
    PUNCT_BEGIN     reduce using rule 24 (span -> SPAN_START letters SPAN_END .)
    LINESTAMP       reduce using rule 24 (span -> SPAN_START letters SPAN_END .)
    NEWLINES        reduce using rule 24 (span -> SPAN_START letters SPAN_END .)
    $end            reduce using rule 24 (span -> SPAN_START letters SPAN_END .)
    SPAN_END        reduce using rule 24 (span -> SPAN_START letters SPAN_END .)
    PUNCT_END       shift and go to state 29

    endings                        shift and go to state 50

state 44

    (13) span -> SPAN_START word SPAN_END NEWLINE .
    SPAN_START      reduce using rule 13 (span -> SPAN_START word SPAN_END NEWLINE .)
    FOREIGN_LETTER  reduce using rule 13 (span -> SPAN_START word SPAN_END NEWLINE .)
    LETTER          reduce using rule 13 (span -> SPAN_START word SPAN_END NEWLINE .)
    PUNCT_BEGIN     reduce using rule 13 (span -> SPAN_START word SPAN_END NEWLINE .)
    LINESTAMP       reduce using rule 13 (span -> SPAN_START word SPAN_END NEWLINE .)
    NEWLINES        reduce using rule 13 (span -> SPAN_START word SPAN_END NEWLINE .)
    $end            reduce using rule 13 (span -> SPAN_START word SPAN_END NEWLINE .)
    SPAN_END        reduce using rule 13 (span -> SPAN_START word SPAN_END NEWLINE .)


state 45

    (14) span -> SPAN_START word SPAN_END endings .
    (31) endings -> endings . PUNCT_END
    (32) endings -> endings . NEWLINE
    SPAN_START      reduce using rule 14 (span -> SPAN_START word SPAN_END endings .)
    FOREIGN_LETTER  reduce using rule 14 (span -> SPAN_START word SPAN_END endings .)
    LETTER          reduce using rule 14 (span -> SPAN_START word SPAN_END endings .)
    PUNCT_BEGIN     reduce using rule 14 (span -> SPAN_START word SPAN_END endings .)
    LINESTAMP       reduce using rule 14 (span -> SPAN_START word SPAN_END endings .)
    NEWLINES        reduce using rule 14 (span -> SPAN_START word SPAN_END endings .)
    $end            reduce using rule 14 (span -> SPAN_START word SPAN_END endings .)
    SPAN_END        reduce using rule 14 (span -> SPAN_START word SPAN_END endings .)
    PUNCT_END       shift and go to state 37
    NEWLINE         shift and go to state 38


state 46

    (19) span -> SPAN_START word letters SPAN_END . NEWLINE
    (20) span -> SPAN_START word letters SPAN_END . endings
    (21) span -> SPAN_START word letters SPAN_END .
    (30) endings -> . PUNCT_END
    (31) endings -> . endings PUNCT_END
    (32) endings -> . endings NEWLINE
    NEWLINE         shift and go to state 51
    SPAN_START      reduce using rule 21 (span -> SPAN_START word letters SPAN_END .)
    FOREIGN_LETTER  reduce using rule 21 (span -> SPAN_START word letters SPAN_END .)
    LETTER          reduce using rule 21 (span -> SPAN_START word letters SPAN_END .)
    PUNCT_BEGIN     reduce using rule 21 (span -> SPAN_START word letters SPAN_END .)
    LINESTAMP       reduce using rule 21 (span -> SPAN_START word letters SPAN_END .)
    NEWLINES        reduce using rule 21 (span -> SPAN_START word letters SPAN_END .)
    $end            reduce using rule 21 (span -> SPAN_START word letters SPAN_END .)
    SPAN_END        reduce using rule 21 (span -> SPAN_START word letters SPAN_END .)
    PUNCT_END       shift and go to state 29

    endings                        shift and go to state 52

state 47

    (16) span -> SPAN_START words SPAN_END NEWLINE .
    SPAN_START      reduce using rule 16 (span -> SPAN_START words SPAN_END NEWLINE .)
    FOREIGN_LETTER  reduce using rule 16 (span -> SPAN_START words SPAN_END NEWLINE .)
    LETTER          reduce using rule 16 (span -> SPAN_START words SPAN_END NEWLINE .)
    PUNCT_BEGIN     reduce using rule 16 (span -> SPAN_START words SPAN_END NEWLINE .)
    LINESTAMP       reduce using rule 16 (span -> SPAN_START words SPAN_END NEWLINE .)
    NEWLINES        reduce using rule 16 (span -> SPAN_START words SPAN_END NEWLINE .)
    $end            reduce using rule 16 (span -> SPAN_START words SPAN_END NEWLINE .)
    SPAN_END        reduce using rule 16 (span -> SPAN_START words SPAN_END NEWLINE .)


state 48

    (17) span -> SPAN_START words SPAN_END endings .
    (31) endings -> endings . PUNCT_END
    (32) endings -> endings . NEWLINE
    SPAN_START      reduce using rule 17 (span -> SPAN_START words SPAN_END endings .)
    FOREIGN_LETTER  reduce using rule 17 (span -> SPAN_START words SPAN_END endings .)
    LETTER          reduce using rule 17 (span -> SPAN_START words SPAN_END endings .)
    PUNCT_BEGIN     reduce using rule 17 (span -> SPAN_START words SPAN_END endings .)
    LINESTAMP       reduce using rule 17 (span -> SPAN_START words SPAN_END endings .)
    NEWLINES        reduce using rule 17 (span -> SPAN_START words SPAN_END endings .)
    $end            reduce using rule 17 (span -> SPAN_START words SPAN_END endings .)
    SPAN_END        reduce using rule 17 (span -> SPAN_START words SPAN_END endings .)
    PUNCT_END       shift and go to state 37
    NEWLINE         shift and go to state 38


state 49

    (22) span -> SPAN_START letters SPAN_END NEWLINE .
    SPAN_START      reduce using rule 22 (span -> SPAN_START letters SPAN_END NEWLINE .)
    FOREIGN_LETTER  reduce using rule 22 (span -> SPAN_START letters SPAN_END NEWLINE .)
    LETTER          reduce using rule 22 (span -> SPAN_START letters SPAN_END NEWLINE .)
    PUNCT_BEGIN     reduce using rule 22 (span -> SPAN_START letters SPAN_END NEWLINE .)
    LINESTAMP       reduce using rule 22 (span -> SPAN_START letters SPAN_END NEWLINE .)
    NEWLINES        reduce using rule 22 (span -> SPAN_START letters SPAN_END NEWLINE .)
    $end            reduce using rule 22 (span -> SPAN_START letters SPAN_END NEWLINE .)
    SPAN_END        reduce using rule 22 (span -> SPAN_START letters SPAN_END NEWLINE .)


state 50

    (23) span -> SPAN_START letters SPAN_END endings .
    (31) endings -> endings . PUNCT_END
    (32) endings -> endings . NEWLINE
    SPAN_START      reduce using rule 23 (span -> SPAN_START letters SPAN_END endings .)
    FOREIGN_LETTER  reduce using rule 23 (span -> SPAN_START letters SPAN_END endings .)
    LETTER          reduce using rule 23 (span -> SPAN_START letters SPAN_END endings .)
    PUNCT_BEGIN     reduce using rule 23 (span -> SPAN_START letters SPAN_END endings .)
    LINESTAMP       reduce using rule 23 (span -> SPAN_START letters SPAN_END endings .)
    NEWLINES        reduce using rule 23 (span -> SPAN_START letters SPAN_END endings .)
    $end            reduce using rule 23 (span -> SPAN_START letters SPAN_END endings .)
    SPAN_END        reduce using rule 23 (span -> SPAN_START letters SPAN_END endings .)
    PUNCT_END       shift and go to state 37
    NEWLINE         shift and go to state 38


state 51

    (19) span -> SPAN_START word letters SPAN_END NEWLINE .
    SPAN_START      reduce using rule 19 (span -> SPAN_START word letters SPAN_END NEWLINE .)
    FOREIGN_LETTER  reduce using rule 19 (span -> SPAN_START word letters SPAN_END NEWLINE .)
    LETTER          reduce using rule 19 (span -> SPAN_START word letters SPAN_END NEWLINE .)
    PUNCT_BEGIN     reduce using rule 19 (span -> SPAN_START word letters SPAN_END NEWLINE .)
    LINESTAMP       reduce using rule 19 (span -> SPAN_START word letters SPAN_END NEWLINE .)
    NEWLINES        reduce using rule 19 (span -> SPAN_START word letters SPAN_END NEWLINE .)
    $end            reduce using rule 19 (span -> SPAN_START word letters SPAN_END NEWLINE .)
    SPAN_END        reduce using rule 19 (span -> SPAN_START word letters SPAN_END NEWLINE .)


state 52

    (20) span -> SPAN_START word letters SPAN_END endings .
    (31) endings -> endings . PUNCT_END
    (32) endings -> endings . NEWLINE
    SPAN_START      reduce using rule 20 (span -> SPAN_START word letters SPAN_END endings .)
    FOREIGN_LETTER  reduce using rule 20 (span -> SPAN_START word letters SPAN_END endings .)
    LETTER          reduce using rule 20 (span -> SPAN_START word letters SPAN_END endings .)
    PUNCT_BEGIN     reduce using rule 20 (span -> SPAN_START word letters SPAN_END endings .)
    LINESTAMP       reduce using rule 20 (span -> SPAN_START word letters SPAN_END endings .)
    NEWLINES        reduce using rule 20 (span -> SPAN_START word letters SPAN_END endings .)
    $end            reduce using rule 20 (span -> SPAN_START word letters SPAN_END endings .)
    SPAN_END        reduce using rule 20 (span -> SPAN_START word letters SPAN_END endings .)
    PUNCT_END       shift and go to state 37
    NEWLINE         shift and go to state 38
